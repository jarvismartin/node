{"ts":1373948029899,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/**\n * Module dependencies.\n */\n\nvar express = require('express')\n  , routes = require('./routes')\n  , user = require('./routes/user')\n  , http = require('http')\n  , path = require('path');\n\nvar app = express();\n\n// all environments\napp.set('port', process.env.PORT || 3000);\napp.set('views', __dirname + '/views');\napp.set('view engine', 'jade');\napp.use(express.favicon());\napp.use(express.logger('dev'));\napp.use(express.bodyParser());\napp.use(express.methodOverride());\napp.use(app.router);\napp.use(express.static(path.join(__dirname, 'public')));\n\n// development only\nif ('development' == app.get('env')) {\n  app.use(express.errorHandler());\n}\n\napp.get('/', routes.index);\napp.get('/users', user.list);\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log('Express server listening on port ' + app.get('port'));\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":843}]],"length":843}
{"contributors":[],"silentsave":false,"ts":1374377995731,"patch":[[{"diffs":[[0,"('path')"],[1,"\n  , UserProvider = require('./db').UserProvider"],[0,";\n"],[-1,""],[0,"\nvar app"]],"start1":181,"start2":181,"length1":18,"length2":66},{"diffs":[[0,"favicon("],[1,"__dirname + '/public/images/favicon.ico'"],[0,"));\napp."]],"start1":413,"start2":413,"length1":16,"length2":56},{"diffs":[[0,"index);\n"],[-1,""],[0,"app.get("]],"start1":759,"start2":759,"length1":16,"length2":16},{"diffs":[[0,"list);\n\n"],[1,"app.get('/customers', routes.customers);\napp.get('/vendors', routes.vendors);\napp.get('/delivery', routes.delivery);\napp.get('/suggestions', routes.suggestions);\napp.get('/customerService', routes.customerService);\n\n"],[0,"http.cre"]],"start1":790,"start2":790,"length1":16,"length2":232}]],"length":1147,"saved":false}
{"ts":1374378181371,"patch":[[{"diffs":[[0,"vice);\n\n"],[1,"// MONGO DB\nvar databaseUrl = \"venfu:ufnev@dharma.mongohq.com:10057/app16932282\"; // \"username:password@example.com/mydb\"\nvar collections = [\"users\"]\nvar db = new UserProvider(databaseUrl, collections).db;\n\napp.get('/vendor_list', function(req, res){\n    db.users.find({vendor: true}, function(err, users) {\n      if( err || !users) console.log(\"No vendors found\");\n      else users.forEach( function(user) {\n      console.log(user);\n      } );\n    });    \n\n  userProvider.findAll(function(error, emps){\n      res.render('index', {\n            title: 'Employees',\n            employees:emps\n        });\n  });\n});\n\n"],[0,"http.cre"]],"start1":1006,"start2":1006,"length1":16,"length2":630}]],"length":1761,"saved":false}
{"ts":1374378294574,"patch":[[{"diffs":[[0,"!users) "],[-1,"console.log("],[1,"{\n          res.json({error: "],[0,"\"No vend"]],"start1":1339,"start2":1339,"length1":28,"length2":45},{"diffs":[[0,"s found\""],[1,"}"],[0,");\n     "]],"start1":1386,"start2":1386,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"else users.forEach( function(user) {\n      console.log(user);\n      } );\n    });    \n\n  userProvider.findAll(function(error, emps){\n      res.render('index', {\n            title: 'Employees',\n            employees:emps\n        });\n  });"],[1,"}\n      else\n          res.json(users);\n    });    "],[0,"\n});"]],"start1":1400,"start2":1400,"length1":244,"length2":59}]],"length":1594,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374378559387,"patch":[[{"diffs":[[0,"\"users\"]"],[1,";"],[0,"\n"],[-1,""],[0,"var db ="]],"start1":1155,"start2":1155,"length1":17,"length2":18},{"diffs":[[0,"s).db;\n\n"],[1,""],[0,"app.get("]],"start1":1214,"start2":1214,"length1":16,"length2":16},{"diffs":[[0,"es){"],[-1,"\n    db.users.find({vendor: true}, function(err, users) {\n      if( err || !users) {\n          res.json({error: \"No vendors found\"});\n      }\n      else\n          res.json(users);\n    });    \n"],[0,"});\n"]],"start1":1261,"start2":1261,"length1":200,"length2":8}]],"length":1403,"saved":false}
{"ts":1374378696047,"patch":[[{"diffs":[[0,"    "],[-1,"db.users.find({vendor: true}, function(err, users) {\n      if( err || !users) {\n          res.json({error: \"No vendors found\"});\n      }\n      else\n          res.json(users);\n    });    "],[1,"res.json(db.getVendors())"],[0,"\n});"]],"start1":1265,"start2":1265,"length1":194,"length2":33}]],"length":1433,"saved":false}
{"ts":1374378698211,"patch":[[{"diffs":[[0,"ndors())"],[1,";"],[0,"\n});\n\nht"]],"start1":1286,"start2":1286,"length1":16,"length2":17}]],"length":1434,"saved":false}
{"ts":1374378752147,"patch":[[{"diffs":[[0,"q, res){"],[1,"\n    res.json(db.getVendors());\n"],[0,"});\n\nhtt"]],"start1":1257,"start2":1257,"length1":16,"length2":48}]],"length":1435,"saved":false}
{"ts":1374378848667,"patch":[[{"diffs":[[0,"\"users\"]"],[1,";"],[0,"\nvar db "]],"start1":1155,"start2":1155,"length1":16,"length2":17},{"diffs":[[0,"ons)"],[-1,".db"],[0,";\n\na"]],"start1":1212,"start2":1212,"length1":11,"length2":8}]],"length":1432,"saved":false}
{"ts":1374378881673,"patch":[[{"diffs":[[0,"\"];\nvar "],[-1,"db"],[1,"userProvider"],[0," = new U"]],"start1":1161,"start2":1161,"length1":18,"length2":28},{"diffs":[[0,"es.json("],[-1,"db"],[1,"userProvider"],[0,".getVend"]],"start1":1278,"start2":1278,"length1":18,"length2":28}]],"length":1452,"saved":false}
{"ts":1374378952066,"patch":[[{"diffs":[[0,"Vendors());\n"],[1,"    console.log(userProvider.getVendors());\n"],[0,"});\n\nhttp.cr"]],"start1":1302,"start2":1302,"length1":24,"length2":68}]],"length":1496,"saved":false}
{"ts":1374379432410,"patch":[[{"diffs":[[0,"    "],[-1,"res.json("],[0,"user"]],"start1":1273,"start2":1273,"length1":17,"length2":8},{"diffs":[[0,"ors("],[-1,"));\n    console.log(userProvider.getVendors()"],[1,"function(results) {\n        res.json(results);\n        console.log(res.json(results));\n    }"],[0,");\n}"]],"start1":1297,"start2":1297,"length1":53,"length2":100}]],"length":1534,"saved":false}
{"ts":1374380701572,"patch":[[{"diffs":[[0,"s', "],[-1,"routes.vendors"],[1,"function (req, res) {\n    routes.vendors(req, res, userProvider);\n}"],[0,");\na"]],"start1":855,"start2":855,"length1":22,"length2":75}]],"length":1587,"saved":false}
{"ts":1374381186929,"patch":[[{"diffs":[[0,"());\n}\n\n"],[1,"// MONGO DB\nvar databaseUrl = \"venfu:ufnev@dharma.mongohq.com:10057/app16932282\"; // \"username:password@example.com/mydb\"\nvar collections = [\"users\"];\nvar userProvider = new UserProvider(databaseUrl, collections);\n\n"],[0,"app.get("]],"start1":731,"start2":731,"length1":16,"length2":231},{"diffs":[[0,"\n// "],[-1,"MONGO DB\nvar databaseUrl = \"venfu:ufnev@dharma.mongohq.com:10057/app16932282\"; // \"username:password@example.com/mydb\"\nvar collections = [\"users\"];\nvar userProvider = new UserProvider(databaseUrl, collections);\n\n"],[0,"app."]],"start1":1281,"start2":1281,"length1":220,"length2":8},{"diffs":[[0,", res){\n"],[1,"// "],[0,"    user"]],"start1":1321,"start2":1321,"length1":16,"length2":19},{"diffs":[[0,"(results) {\n"],[1,"// "],[0,"        res."]],"start1":1368,"start2":1368,"length1":24,"length2":27},{"diffs":[[0,"sults);\n"],[1,"//"],[0,"        "],[1," "],[0,"console."]],"start1":1402,"start2":1402,"length1":24,"length2":27},{"diffs":[[0,"));\n"],[1,"// "],[0,"    });\n"],[1,"// "],[0,"});\n"]],"start1":1449,"start2":1449,"length1":16,"length2":22}]],"length":1605,"saved":false}
{"ts":1374381710588,"patch":[[{"diffs":[[0,"());\n}\n\n"],[1,"// MONGO DB\nvar databaseUrl = \"venfu:ufnev@dharma.mongohq.com:10057/app16932282\"; // \"username:password@example.com/mydb\"\nvar collections = [\"users\"];\nvar userProvider = new UserProvider(databaseUrl, collections);\n\n"],[0,"app.get("]],"start1":731,"start2":731,"length1":16,"length2":231},{"diffs":[[0,"s', "],[-1,"routes.vendors"],[1,"function (req, res) {\n    routes.vendors(req, res, userProvider);\n}"],[0,");\na"]],"start1":1070,"start2":1070,"length1":22,"length2":75},{"diffs":[[0,");\n\n"],[-1,"// MONGO DB\nvar databaseUrl = \"venfu:ufnev@dharma.mongohq.com:10057/app16932282\"; // \"username:password@example.com/mydb\"\nvar collections = [\"users\"];\nvar db = new UserProvider(databaseUrl, collections).db;\n\napp.get('/vendor_list', "],[1," app.get('/vendor_list', function(req, res){\n     userProvider.getVendors("],[0,"func"]],"start1":1278,"start2":1278,"length1":240,"length2":82},{"diffs":[[0,"(function(re"],[-1,"q, re"],[1,"sult"],[0,"s)"],[1," "],[0,"{\n"],[1,"     "],[0,"    res.json"]],"start1":1355,"start2":1355,"length1":33,"length2":38},{"diffs":[[0,"son("],[-1,"db.getVendors());\n"],[1,"results);\n         console.log(res.json(results));\n     });\n "],[0,"});\n"]],"start1":1390,"start2":1390,"length1":26,"length2":69}]],"length":1593,"saved":false}
{"ts":1374381914940,"patch":[[{"diffs":[[0,"vice);\n\n"],[1,"//"],[0," app.get"]],"start1":1274,"start2":1274,"length1":16,"length2":18},{"diffs":[[0,", res){\n"],[1,"//"],[0,"     use"]],"start1":1321,"start2":1321,"length1":16,"length2":18},{"diffs":[[0,"(results) {\n"],[1,"//"],[0,"         res"]],"start1":1368,"start2":1368,"length1":24,"length2":26},{"diffs":[[0,"sults);\n"],[1,"//"],[0,"        "]],"start1":1402,"start2":1402,"length1":16,"length2":18},{"diffs":[[0,"ults));\n"],[1,"//"],[0,"     });"]],"start1":1445,"start2":1445,"length1":16,"length2":18},{"diffs":[[0,"    });\n"],[1,"//"],[0," });\n\nht"]],"start1":1456,"start2":1456,"length1":16,"length2":18}]],"length":1605,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376831576251,"patch":[[{"diffs":[[0,"  , "],[-1,"UserProvider = require('./db').UserProvider;\n\nvar app = express();\n\n// all environments\napp.set('port', process.env.PORT || 3000);\napp.set('views', __dirname + '/views');\napp.set('view engine', 'jade');\napp.use(express.favicon(__dirname + '/public/images/favicon.ico'));\napp.use(express.logger('dev'));\napp.use(express.bodyParser());\napp.use(express.methodOverride());\napp.use(app.router);\napp.use(express.static(path.join(__dirname, 'public')));\n\n// development only\nif ('development' == app.get('env')) {\n  app.use(express.errorHandler());\n}\n\n// MONGO DB\nvar databaseUrl = \"venfu:ufnev@dharma.mongohq.com:10057/app16932282\"; // \"username:password@example.com/mydb\"\nvar collections = [\"users\"];\nvar userProvider = new UserProvider(databaseUrl, collections);\n\n// MONGO DB\nvar databaseUrl = \"venfu:ufnev@dharma.mongohq.com:10057/app16932282\"; // \"username:password@example.com/mydb\"\nvar collections = [\"users\"];\nvar userProvider = new UserProvider(databaseUrl, collections);\n\napp.get('/', routes.index);\napp.get('/users', user.list);\n\n//app.get('/customers', function (req, res) {\n//    routes.vendors(req, res, userProvider);\n});\napp.get('/vendors', function (req, res) {\n    routes.vendors(req, res, userProvider);\n});\napp.get('/delivery', routes.delivery);\napp.get('/suggestions', routes.suggestions);\napp.get('/customerService', routes.customerService);\n\n// app.get('/vendor_list', function(req, res);{\n//     userProvider.getVendors(function(results) {\n////         res.json(results);\n////         console.log(res.json(results));\n////     });\n//// });"],[1,"passport = require('passport')\n  , LocalStrategy = require('passport-local').Strategy\n  , FacebookStrategy = require('passport-facebook').Strategy\n  //, bcrypt = require('bcrypt')\n  , mongoose = require('mongoose')\n  , Schema = mongoose.Schema;\n//  , mongooseAuth = require('mongoose-auth');\n//  , UserProvider = require('./db').UserProvider\n\nvar app = express();\n\n// MONGO DB\n\nvar UserSchema = Schema({\n    classification: { type: String, required: true },\n    email: { type: String, required: true, index: { unique: true } },\n    username: { type: String, required: true, index: { unique: true } },\n    password: { type: String, required: true },\n    salt: { type: String, required: true }\n});\n\n/*\n *\n */\nUserSchema.statics.getVendors = function (callback) {\n  return this.find({vendor: true}, function(err, users) {\n      if( err || !users) {\n          callback({error: \"No vendors found\"});\n      }\n      else {\n          callback(users);\n      }\n    });\n};\n\nvar SALT_WORK_FACTOR = 10;\nUserSchema.pre('save', function(next) {\n    var user = this;\n\n    // only hash the password if it has been modified (or is new)\n    if (!user.isModified('password')) return next();\n\n    // generate a salt\n    bcrypt.genSalt(SALT_WORK_FACTOR, function(err, salt) {\n        if (err) return next(err);\n\n        // hash the password using our new salt\n        bcrypt.hash(user.password, salt, function (err, hash) {\n            if (err) return next(err);\n\n            // set the hashed password back on our user document\n            user.password = hash;\n            user.salt = salt;\n            next();\n        });\n    });\n});\n\nUserSchema.methods.validatePassword = function(candidatePassword) {\n  return bcrypt.compareSync(candidatePassword, this.password);\n};\n\nvar User = mongoose.model('User', UserSchema);\n\n// Needs to be up top in order to setup database middleware (ie. app.use())\n//var databaseUrl = \"venfu:ufnev@dharma.mongohq.com:10057/app16932282\";\n//var collections = [\"users\"];\n//var userProvider = new UserProvider(databaseUrl, collections);\nmongoose.connect('venfu:ufnev@dharma.mongohq.com:10057/app16932282');\n\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\n\n// Passport\npassport.use(new LocalStrategy({\n    usernameField: 'username',\n    passwordField: 'password'\n  },\n  function(username, password, done) {\n    User.findOne({ username: username }, function(err, user) {\n      if (err) { \n        console.log(err);\n        return done(err); \n      }\n      if (!user) {\n        console.log({ message: 'Incorrect username.' });\n        return done(null, false, { message: 'Incorrect username.' });\n      }\n      if(!user.validatePassword(password)) {\n          console.log({ message: 'Incorrect password.' });\n          // console.log(password);\n          // console.log(user);\n          return done(null, false, { message: 'Incorrect password.' });\n      }\n      // console.log(user);\n      return done(null, user);\n    });\n  }\n));\n\n// all environments\napp.set('port', process.env.PORT || 3000);\napp.set('views', __dirname + '/views');\napp.set('view engine', 'jade');\n\n// Adds a `getUserProvider` function to each response object which gives access to the database connection\n// app.use(function(req, res, next) {\n//     res.getUserProvider = function() {\n//         return User;\n//     };\n//     next();\n// });\napp.use(express.favicon(__dirname + '/public/images/favicon.ico'));\napp.use(express.logger('dev'));\napp.use(express.bodyParser());\napp.use(express.cookieParser('mr ripley')); // HOW DO WE NEED TO CHANGE THIS ???????????????????\napp.use(express.session({ secret: 'SECRET'})); // HOW DO WE NEED TO CHANGE THIS ???????????????????\napp.use(express.methodOverride());\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(app.router);\napp.use(express.static(path.join(__dirname, 'public')));\n\n// development only\nif ('development' == app.get('env')) {\n  app.use(express.errorHandler());\n}\n\napp.get('/', routes.index);\n\napp.get('/users', user.list);\napp.get('/customers', routes.customers);\napp.get('/vendors', routes.vendors);\napp.get('/delivery', routes.delivery);\napp.get('/suggestions', routes.suggestions);\napp.get('/customerService', routes.customerService);\napp.get('/login', routes.login);\napp.get('/register', routes.register);\napp.get('/about', routes.about);\napp.get('/settings', routes.settings);\n\napp.get('/logout', function(req, res){\n  // console.log(\"Logging Out Now...\");\n  req.logout();\n  // console.log(req.user);\n  // console.log(req.session);\n  res.redirect('/');\n});\n\napp.post('/login',\n  passport.authenticate('local', { successRedirect: '/',\n                                   failureRedirect: '/login'})\n);\n\n// function authenticatedOrNot(req, res, next){\n//     if(req.isAuthenticated()){\n//         next();\n//     }else{\n//         res.redirect(\"/login\");\n//     }\n// }\n// \n// app.get('/user', \n//   authenticatedOrNot,\n//   // passport.authenticate('local', { failureRedirect: '/login' }),\n//   function(req, res) {\n//     console.log(req.user);\n//     res.json(req.user);\n//   }\n// );\n\n\napp.post('/register',\n  // passport.authenticate('local', { successRedirect: '/',\n    // failureRedirect: '/register'}),\n  function(req, res) {\n    console.log(req);\n    var username = req.body.username;\n    var password = req.body.password;\n    var email = req.body.email;\n\n    var user = new User({username: username, email: email, classification: \"C\", password: password, salt: \"no-salt-please\"});\n    user.save(function(err) {\n      if (err) { \n        console.log(err);\n      }\n    });\n    res.redirect('#');\n  }\n);\n\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  User.findOne({_id: id}, function(err, user) {\n    done(err, user);\n  });\n});\n\n"],[0,"\n\nht"]],"start1":190,"start2":190,"length1":1563,"length2":5819}]],"length":6140,"saved":false}
