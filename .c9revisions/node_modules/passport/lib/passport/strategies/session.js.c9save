{"ts":1374294681712,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Module dependencies.\n */\nvar pause = require('pause')\n  , util = require('util')\n  , Strategy = require('../strategy');\n\n\n/**\n * `SessionStrategy` constructor.\n *\n * @api protected\n */\nfunction SessionStrategy() {\n  Strategy.call(this);\n  this.name = 'session';\n}\n\n/**\n * Inherit from `Strategy`.\n */\nutil.inherits(SessionStrategy, Strategy);\n\n/**\n * Authenticate request based on the current session state.\n *\n * The session authentication strategy uses the session to restore any login\n * state across requests.  If a login session has been established, `req.user`\n * will be populated with the current user.\n *\n * This strategy is registered automatically by Passport.\n *\n * @param {Object} req\n * @param {Object} options\n * @api protected\n */\nSessionStrategy.prototype.authenticate = function(req, options) {\n  if (!req._passport) { return this.error(new Error('passport.initialize() middleware not in use')); }\n  options = options || {};\n\n  var self = this\n    , su = req._passport.session.user;\n  if (su || su === 0) {\n    // NOTE: Stream pausing is desirable in the case where later middleware is\n    //       listening for events emitted from request.  For discussion on the\n    //       matter, refer to: https://github.com/jaredhanson/passport/pull/106\n    \n    var paused = options.pauseStream ? pause(req) : null;\n    req._passport.instance.deserializeUser(su, function(err, user) {\n      if (err) { return self.error(err); }\n      if (!user) {\n        delete req._passport.session.user;\n        self.pass();\n        if (paused) {\n          paused.resume();\n        }\n        return;\n      };\n      var property = req._passport.instance._userProperty || 'user';\n      req[property] = user;\n      self.pass();\n      if (paused) {\n        paused.resume();\n      }\n    });\n  } else {\n    self.pass();\n  }\n}\n\n\n/**\n * Expose `SessionStrategy`.\n */ \nmodule.exports = SessionStrategy;\n"]],"start1":0,"start2":0,"length1":0,"length2":1897}]],"length":1897}
